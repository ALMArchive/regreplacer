(function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)})([function(a,b,c){'use strict';const d=c(1),e=c(2);a.exports=function(a){if(!e(a))throw new Error('Must pass regex to RegReplace');this.match=function b(c){if('string'!=typeof c)throw new Error('Must pass string to setString.');let e=a.exec(c),f=[];for(;null!=e;){f.push(e);let d=b.index;if(e=a.exec(c),e&&e.index===d)break}return new d(f)}}},function(a){'use strict';function b(a){return void 0!==a&&('captures'===a||'matches'===a)}a.exports=function(a){if(!Array.isArray(a))throw new Error('Must pass array to RegRepMatches.');this.getMatches=function(){return a.map((a)=>a[0])},this.getCaptures=function(){return a.map((a)=>a[1])},this.getIndices=function(){return a.map((a)=>a.index)},this.replace=function(c,d){if(!Array.isArray(c))throw new Error('Must pass array to replace.');if(!b(d))throw new Error('Must pass either captures or matches to replace');let e;'matches'===d?e=this.getMatches():'captures'===d&&(e=this.getCaptures());let f=a[0].input;for(let b=0;b<a.length;b++)f=f.replace(e[b],c[b]);return f}}},function(a){a.exports=function(a){return void 0!==a&&!!(a instanceof RegExp)}}]);